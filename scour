#!/usr/bin/env python3
import argparse
import sys
import pickle
import inspect

from lib import Project

'''
Copied usage notes

i.e.

Using scour to build notes on renewable energy generation and storage

scour begin thesis

scour begin generation
scour collect "~renewable energy" ~generation --articles
...
scour end generation

scour sub storage
scour collect ~"renewable energy" ~"energy storage" --articles
...
scour end storage

scour end thesis

'''


def get_method_docs(obj):
    members = [(func, getattr(obj, func)) for func in dir(obj) if callable(getattr(obj, func)) and not func.startswith("__")]
    return [(name, func.__doc__) for name, func in members]

def get_cli_docs():
    methodDocs = get_method_docs(Project)
    subcommands = '    ' + '\n    '.join(name for name, doc in methodDocs)
    format_doc  = lambda doc : '\n        '.join(line for line in doc.split('\n')) if doc is not None else ''
    docs        = '    ' + '\n    '.join('{}:\n        {}'.format(name, format_doc(doc)) for name, doc in methodDocs)
    return subcommands, docs

def main():
    subcommands, docs = get_cli_docs()

    parser = argparse.ArgumentParser(description=docs, 
                formatter_class=argparse.RawTextHelpFormatter)
    parser.add_argument('subcommand', type=str,
            help='Select a subcommand of scour to run: \n' + subcommands)
    parser.add_argument('subargs', type=str, nargs='*',
                        help='Potentially optional sub-arguments fed into a subcommand')
    args = parser.parse_args()


    try:
        with open('.project.pkl', 'rb') as infile:
            project = pickle.load(infile)
    except FileNotFoundError:
        project = Project()

    project_command = getattr(project, args.subcommand)
    project_command(*args.subargs)

    with open('.project.pkl', 'wb') as outfile:
        pickle.dump(project, outfile)

    return 0

if __name__ == '__main__':
    sys.exit(main())
